#!/bin/bash
###########################################
#                                         #
#         ______)                         #
#        (, /         /)                  #
#          /  _  _   (/_ _   _            #
#       ) / _(/_(_(_/_) (_(_(_/_          #
#      (_/                 .-/            #
#                         (_/             #
#                                         #
#                    CoGe's Utility Belt  #
#                                         #
###########################################


##################################
#    Configuration Settings      #
##################################

CONF_DIR='/opt/apache2/coge/coge.conf'
PROJECT_DIR='/home/rchasman/git/Greentea/'
LOG_FILE='/home/rchasman/error.log'
FONT='invita'

##################################
#      Function Definitions      #
##################################

function GreenteaRunner {
    printf "|-\-\-\-\-> Changing Into %s %-12s" "$PROJECT_DIR"
    cd "$PROJECT_DIR"
    printf "[ OK ]\n"

    printf "|-\-\-\-\-> Restarting Greentea %-35s"
    pkill -f "lein"
    lein run &> "$LOG_FILE" &
    printf "[ OK ]\n"

    cd - &> /dev/null

    printf "|-\-\-\-\-> restarting apache %-37s"
    sudo service apache2 restart &> /dev/null
    printf "[ OK ]\n"

    printf "|-\-\-\-\-> Done! %-49s"
    printf "[ OK ]\n"

    if [ "$(pgrep -f "lein")" ]
    then
        echo -e "\n`echo "Greentea" | figlet -f invita` Infused and Ready\n"
    else
        figlet -f "$FONT" "Something went wrong :(" | cowsay -n -e "XX" -T "U"
    fi
}

function GreenteaKiller {
    if [ "$(pgrep -f lein)" ]
    then
        printf "|-\-\-\-\-> Killing Greentea %-45s"
        pkill -f "lein"
        if [ "$(pgrep -f lein)" ]
        then
            printf "[ OK ]\n"
        else
            printf "[ FAILED ]\n"
        fi
    else
        echo -e "$STR" `echo "[NOT Running] "` "\n" | cowsay -n -e "><"
    fi
}

function GreenteaStatus {
    STR="\n`figlet -f "$FONT" "Greentea is:"`\n\n\t\t\t\t\t"
    if [ "$(pgrep -f lein)" ]
    then
        echo -e "$STR" `echo "[Running] "` "\n" | cowsay -n -e "^^" -T "U"
    else
        echo -e "$STR" `echo "[NOT Running] "` "\n" | cowsay -n -e "><"
    fi
}

function Commands {
    printf "Available Commands:\n"
    echo -e "$AVAILABLE_COMMANDS"
}

function Usage {
    echo "Usage: teabag <command>"
    Commands
    Processes
}

function Processes {
    printf "Available Processes:\n"
    echo -e "$AVAILABLE_PROCESSES"
}

function TeabagApache {
    sudo service apache2 restart
}

function Help {
    if [ $NUM_ARGS -lt 2 ]
    then
        echo "Help usage: teabag help <command>"
    else
        if [ ${ARGS[1]} == "status" ]
        then
            echo "usage: teabag status"
            printf "\t> Returns the status of the currently running processes.\n"
        elif [ ${ARGS[1]} == "help" ]
        then
            echo "usage: teabag help <command>"
            printf "\t> Provides a terse description about passable commands.\n"
        elif [ ${ARGS[1]} == "kill" ]
        then
            echo "usage: teabag kill"
            printf "\t> Kills all currently running processes.\n"
            echo "usage: teabag kill <process>"
            printf "\t> Kills the specified running processes.\n"
        elif [ ${ARGS[1]} == "infuse" ]
        then
            echo "usage: teabag"
            echo "usage: teabag infuse"
            printf "\t> Starts all configured processes.\n"
            echo "usage: teabag infuse <process>"
            printf "\t> Starts the specified teabag process.\n"
        elif [ ${ARGS[1]} == "apache" ]
        then
            echo "usage: teabag apache"
            printf "\t> Restarts the apache server.\n"
        elif [ ${ARGS[1]} == "processes" ]
        then
            echo "usage: teabag processes"
            printf "\t> Lists all configured processes.\n"
        elif [ ${ARGS[1]} == "usage" ]
        then
            echo "usage: teabag commands"
            printf "\t> Lists all usable commands.\n"
        else
            echo "${ARGS[1]}" "is not a valid command!"
            echo -e "Did you Mean:\n" "$AVAILABLE_COMMANDS"
        fi
    fi
}

##################################
#        Global Variables        #
##################################

NUM_ARGS=("$#")
ARGS=("$@")
# TODO: Turn into arrays and parse them out within their appropriate functions
AVAILABLE_COMMANDS="\tstatus\n \tapache\n \tkill\n \tusage\n \tinfuse\n \tprocesses\n \thelp"
AVAILABLE_PROCESSES="\tgreentea"

##################################
#          Main Method           #
##################################

if [ $# != 0 ]
then
    if [ "$1" == "status" ]
    then
        GreenteaStatus
    elif [ "$1" == "kill" ]
    then
        GreenteaKiller
    elif [ "$1" == "infuse" ]
    then
        GreenteaRunner
    elif [ "$1" == "help" ]
    then
        Help
    elif [ "$1" == "processes" ]
    then
        Processes
    elif [ "$1" == "commands" ]
    then
        Commands
    elif [ "$1" == "apache" ]
    then
        TeabagApache
    else
        Usage
    fi
else
    GreenteaRunner
fi
